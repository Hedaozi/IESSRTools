<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IESSRTools.Style;component/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF989898"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Inner.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="RadioButton.Checked.Inner.Border" Color="#FF0067C0"/>
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource RadioButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" Width="18" Height="18" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Ellipse x:Name="innerRing" Fill="Transparent" Stroke="Transparent"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource RadioButton.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource RadioButton.Pressed.Background}"/>
                            <Setter Property="Stroke" TargetName="innerRing" Value="{DynamicResource RadioButton.Pressed.Inner.Border}"/>
                            <Setter Property="StrokeThickness" TargetName="innerRing" Value="4"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Stroke" TargetName="innerRing" Value="{DynamicResource RadioButton.Checked.Inner.Border}"/>
                            <Setter Property="StrokeThickness" TargetName="innerRing" Value="4"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RatioButton.Info.Text" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FF646465"/>
        <Setter Property="Margin" Value="0,3,0,0"/>
    </Style>
</ResourceDictionary>