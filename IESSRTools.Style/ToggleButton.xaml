<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ToggleSwitch.On.Fill" Color="#FF0067C0"/>
    <SolidColorBrush x:Key="ToggleSwitch.Off.Fill" Color="#FF5E5D5C"/>
    <SolidColorBrush x:Key="ToggleSwitch.Off.MouseOver.Background" Color="#FFEEEEEE"/>
    <SolidColorBrush x:Key="ToggleSwitch.Off.Border" Color="#FF949291"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ToggleSwitch" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border x:Name="SwitchOff" BorderBrush="{DynamicResource ToggleSwitch.Off.Border}" BorderThickness="1" CornerRadius="9" Height="18" Width="40" Grid.Column="1">
                                <Ellipse x:Name="SwitchOffCircle" Stroke="Transparent" StrokeThickness="1" Height="13" Width="13" Fill="{DynamicResource ToggleSwitch.Off.Fill}" HorizontalAlignment="Left" Margin="1,0,0,0"/>
                            </Border>
                            <Border x:Name="SwitchOn" BorderBrush="{DynamicResource ToggleSwitch.On.Fill}" Background="{DynamicResource ToggleSwitch.On.Fill}" BorderThickness="1" CornerRadius="9" Height="18" Width="40" Grid.Column="1">
                                <Ellipse x:Name="SwitchOnCircle" Stroke="Transparent" StrokeThickness="1" Height="13" Width="13" Fill="White" HorizontalAlignment="Right" Margin="0,0,1,0"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="SwitchOff" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="SwitchOn" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="False">
                            <Setter TargetName="SwitchOff" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SwitchOn" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SwitchOnCircle" Property="Height" Value="15"/>
                            <Setter TargetName="SwitchOnCircle" Property="Width" Value="15"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SwitchOnCircle" Property="Height" Value="15"/>
                            <Setter TargetName="SwitchOnCircle" Property="Width" Value="17"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SwitchOffCircle" Property="Height" Value="15"/>
                            <Setter TargetName="SwitchOffCircle" Property="Width" Value="15"/>
                            <Setter TargetName="SwitchOff" Property="Background" Value="{DynamicResource ToggleSwitch.Off.MouseOver.Background}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SwitchOffCircle" Property="Height" Value="15"/>
                            <Setter TargetName="SwitchOffCircle" Property="Width" Value="17"/>
                            <Setter TargetName="SwitchOff" Property="Background" Value="{DynamicResource ToggleSwitch.Off.MouseOver.Background}"/>
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>